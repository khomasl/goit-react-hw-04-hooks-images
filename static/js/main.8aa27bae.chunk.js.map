{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/notify.js","services/pixabay.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","Searchbar","getSearchValue","useState","searchValue","setSearchValue","handleChange","useCallback","e","target","value","handleSubmit","preventDefault","className","s","SearchForm","onSubmit","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","onChange","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onClickImage","id","webformatURL","tags","onClick","src","alt","ImageGalleryItem_image","defaultProps","notifyError","txt","error","text","delay","modules","Map","defaultModules","PNotifyMobile","swipeDismiss","defaults","styling","icons","sticker","animateSpeed","shadow","PixabayFetch","base_url","api_key","this","_searchQuery","_page","_perPage","endPoint","a","params","searchQuery","page","perPage","url","axios","get","result","data","hits","message","Button","Modal","toggleModal","handleCloseOrEscape","currentTarget","code","useEffect","window","addEventListener","removeEventListener","largeImageURL","createPortal","Overlay","document","getElementById","LoaderSpinner","color","height","width","timeout","STATUS","newPixabayFetch","ImageGallery","gallery","setGallery","status","setStatus","showModal","setShowModal","setImage","resetPage","fetch","searchImages","then","prevGallery","scrollTo","top","documentElement","scrollHeight","behavior","catch","err","handleButtonClick","showImage","find","Number","handleImageClick","length","map","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8aa27bae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__yrl_y\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__JNaul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1BupL\",\"Modal\":\"Modal_Modal__MLb4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3czq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2iMQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar___llFV\",\"SearchForm\":\"Searchbar_SearchForm__1RUQv\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2VG42\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1nNMW\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2JjLB\"};","import PropTypes from 'prop-types'\r\nimport { useState, useCallback } from 'react'\r\nimport s from './Searchbar.module.css'\r\n\r\nexport default function Searchbar({ getSearchValue }) {\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  const handleChange = useCallback((e) => setSearchValue(e.target.value), [])\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault()\r\n      getSearchValue(searchValue)\r\n      setSearchValue('')\r\n    },\r\n    [searchValue],\r\n  )\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          name=\"searchValue\"\r\n          value={searchValue}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  getSearchValues: PropTypes.func,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport s from './ImageGalleryItem.module.css'\r\n\r\nexport default function ImageGalleryItem({ image, onClickImage }) {\r\n  const { id, webformatURL, tags } = image\r\n\r\n  return (\r\n    <li key={id} className={s.ImageGalleryItem} onClick={onClickImage}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        id={id}\r\n        className={s.ImageGalleryItem_image}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string,\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n\r\n  onClickImage: PropTypes.func,\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  webformatURL: '',\r\n  tags: 'Image URL',\r\n}\r\n","import {\r\n  alert,\r\n  error,\r\n  info,\r\n  defaultModules,\r\n  success,\r\n  defaults,\r\n} from '../../node_modules/@pnotify/core/dist/PNotify.js'\r\nimport '@pnotify/core/dist/PNotify.css'\r\nimport '@pnotify/core/Angeler.css'\r\nimport '@pnotify/core/Material.css'\r\nimport '@pnotify/mobile/dist/PNotifyMobile.css'\r\nimport * as PNotifyMobile from '@pnotify/mobile'\r\n\r\ndefaults.styling = 'angeler'\r\ndefaults.icons = 'angeler'\r\ndefaults.delay = 800\r\ndefaults.sticker = false\r\ndefaults.animateSpeed = 'slow'\r\ndefaults.shadow = false\r\n\r\nexport function notifyAlert(txt) {\r\n  alert({\r\n    text: txt,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\nexport function notifyError(txt) {\r\n  error({\r\n    text: txt,\r\n    delay: 4000,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\nexport function notifyInfo(txt) {\r\n  info({\r\n    text: txt,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\nexport function notifySuccess(txt) {\r\n  success({\r\n    text: txt,\r\n    delay: 1200,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { notifyError } from '../components/notify'\r\n\r\nexport default class PixabayFetch {\r\n  constructor(base_url, api_key) {\r\n    this.base_url = base_url\r\n    this.api_key = api_key\r\n    this._searchQuery = ''\r\n    this._page = 1\r\n    this._perPage = 12\r\n    this.endPoint = ''\r\n  }\r\n  get searchQuery() {\r\n    return this._searchQuery\r\n  }\r\n  set searchQuery(value) {\r\n    return (this._searchQuery = value)\r\n  }\r\n  get page() {\r\n    return this._page\r\n  }\r\n  set page(value) {\r\n    return (this._page += value)\r\n  }\r\n  get perPage() {\r\n    return this._perPage\r\n  }\r\n  set perPage(value) {\r\n    return (this._perPage = value)\r\n  }\r\n\r\n  resetPage() {\r\n    return (this._page = 1)\r\n  }\r\n\r\n  async searchImages() {\r\n    const type = 'image_type=photo&orientation=horizontal'\r\n    let params = `?q=${this.searchQuery}&page=${this.page}&per_page=${this.perPage}&key=${this.api_key}&${type}`\r\n    let url = this.base_url + this.endPoint + params\r\n\r\n    try {\r\n      const result = await axios.get(url)\r\n      return await result.data.hits\r\n    } catch (err) {\r\n      return notifyError(err.message)\r\n    }\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport s from './Button.module.css'\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { useEffect } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport s from './Modal.module.css'\r\n\r\nexport default function Modal({ image, toggleModal }) {\r\n  const handleCloseOrEscape = (e) => {\r\n    if (e.currentTarget === e.target || e.code === 'Escape') {\r\n      toggleModal()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleCloseOrEscape)\r\n    return () => window.removeEventListener('keydown', handleCloseOrEscape)\r\n  })\r\n\r\n  const { largeImageURL, tags } = image\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleCloseOrEscape}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageURL} alt={tags} />\r\n      </div>\r\n    </div>,\r\n    document.getElementById('modalRoot'),\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImageURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n\r\n  toggleModal: PropTypes.func,\r\n}\r\n\r\nModal.defaultProps = {\r\n  largeImageURL: '',\r\n  tags: 'large Image URL',\r\n}\r\n","import Loader from 'react-loader-spinner'\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\n\r\nexport default function LoaderSpinner() {\r\n  return (\r\n    <Loader\r\n      className=\"Loader\"\r\n      type=\"Oval\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\nimport PixabayFetch from '../../services/pixabay'\r\nimport Button from '../Button/Button'\r\nimport Modal from '../Modal/Modal'\r\nimport { notifyError } from '../notify'\r\nimport LoaderSpinner from '../Loader/Loader'\r\nimport s from './ImageGallery.module.css'\r\n\r\nconst STATUS = {\r\n  INIT: 'init',\r\n  PENDING: 'pending',\r\n  SUCCESS: 'success',\r\n  ERROR: 'error',\r\n}\r\n\r\nconst base_url = `https://pixabay.com/api/`\r\nconst api_key = `23045990-a26bb8d890e0b5c9b60396550`\r\nconst newPixabayFetch = new PixabayFetch(base_url, api_key)\r\n\r\nexport default function ImageGallery({ searchValue }) {\r\n  const [gallery, setGallery] = useState([])\r\n  const [status, setStatus] = useState(STATUS.INIT)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [image, setImage] = useState({})\r\n\r\n  useEffect(() => {\r\n    if (searchValue === '') return\r\n    setGallery([])\r\n    setStatus(STATUS.PENDING)\r\n    newPixabayFetch.resetPage()\r\n    newPixabayFetch.searchQuery = searchValue\r\n    fetch()\r\n  }, [searchValue])\r\n\r\n  const scrolling = () =>\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    })\r\n\r\n  function fetch() {\r\n    newPixabayFetch\r\n      .searchImages()\r\n      .then((gallery) => {\r\n        setGallery((prevGallery) => [...prevGallery, ...gallery])\r\n        setStatus(STATUS.SUCCESS)\r\n        if (newPixabayFetch.page !== 1) scrolling()\r\n      })\r\n      .catch((err) => {\r\n        setStatus(STATUS.ERROR)\r\n        notifyError(err.message)\r\n      })\r\n  }\r\n\r\n  const handleButtonClick = useCallback(() => {\r\n    newPixabayFetch.page = 1\r\n    //setStatus('pending')\r\n    fetch()\r\n  }, [])\r\n\r\n  const showImage = (id) => {\r\n    const image = gallery.find((image) => Number(image.id) === Number(id))\r\n    setImage(image)\r\n    toggleModal()\r\n  }\r\n\r\n  const handleImageClick = useCallback((e) => showImage(e.target.id), [\r\n    showImage,\r\n  ])\r\n\r\n  const toggleModal = useCallback(() => setShowModal(!showModal), [showModal])\r\n\r\n  if (status === STATUS.INIT) return <h1> </h1>\r\n\r\n  if (status === STATUS.PENDING) return <LoaderSpinner />\r\n\r\n  if (status === STATUS.SUCCESS) {\r\n    return (\r\n      gallery.length > 0 && (\r\n        <>\r\n          <ul className={s.ImageGallery}>\r\n            {gallery.map((image) => (\r\n              <ImageGalleryItem image={image} onClickImage={handleImageClick} />\r\n            ))}\r\n          </ul>\r\n          <Button onClick={handleButtonClick} />\r\n          {showModal && <Modal image={image} toggleModal={toggleModal} />}\r\n        </>\r\n      )\r\n    )\r\n  }\r\n\r\n  if (status === STATUS.ERROR) return <h1>ALARMA!!!</h1>\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchValue: PropTypes.string,\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n  searchValue: '',\r\n}\r\n","import './App.css'\nimport { useState } from 'react'\nimport Searchbar from './components/Searchbar/Searchbar'\nimport ImageGallery from './components/ImageGallery/ImageGallery'\n\nexport default function App() {\n  const [searchValue, setSearchValue] = useState('')\n\n  return (\n    <div className=\"App\">\n      <>\n        <Searchbar getSearchValue={setSearchValue} />\n        <ImageGallery searchValue={searchValue} />\n      </>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}